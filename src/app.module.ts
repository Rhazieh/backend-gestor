// backend-gestor/src/app.module.ts
// -----------------------------------------------------------------------------
// M√ìDULO RA√çZ DEL BACKEND (NestJS)
// Ac√° ‚Äúenchufamos‚Äù todo: configuraci√≥n de variables de entorno (.env),
// conexi√≥n a la base de datos (TypeORM + Postgres) y los m√≥dulos de dominio
// (pacientes y turnos). Cuando en main.ts hacemos NestFactory.create(AppModule),
// Nest arranca desde este m√≥dulo.
// -----------------------------------------------------------------------------

// @Module me permite declarar qu√© importa, qu√© provee y qu√© expone este m√≥dulo.
import { Module } from '@nestjs/common';

// ConfigModule: habilita leer variables de entorno (por ejemplo DATABASE_URL).
import { ConfigModule } from '@nestjs/config';

// TypeOrmModule: integra TypeORM (el ORM) con Nest.
import { TypeOrmModule } from '@nestjs/typeorm';

// Nuestros m√≥dulos de funcionalidad.
import { PacientesModule } from './pacientes/pacientes.module';
import { TurnosModule } from './turnos/turnos.module';

@Module({
  imports: [
    /**
     * ConfigModule.forRoot():
     * - Carga variables de entorno (por defecto busca un archivo .env en la ra√≠z).
     * - isGlobal: true ‚Üí lo hace disponible en toda la app sin re-importar.
     *   Ej: process.env.DATABASE_URL va a estar accesible en cualquier parte.
     */
    ConfigModule.forRoot({
      isGlobal: true,
    }),

    /**
     * Conexi√≥n a la base con TypeORM (PostgreSQL):
     * - type: 'postgres' ‚Üí motor de la base.
     * - url: process.env.DATABASE_URL ‚Üí string de conexi√≥n completa (usuario, pass, host, puerto, DB).
     * - synchronize: true ‚Üí AUTO-sincroniza entidades ‚Üî tablas.
     *      ‚ö† √ötil en desarrollo. En producci√≥n puede alterar el esquema.
     * - autoLoadEntities: true ‚Üí no necesito registrar manualmente cada entidad aqu√≠:
     *      con que est√©n en sus m√≥dulos (TypeOrmModule.forFeature([...])) alcanza.
     * - ssl: true + extra.ssl.rejectUnauthorized=false:
     *      Permite conexiones SSL incluso con certificados no verificados
     *      (com√∫n en proveedores tipo Render/Heroku).
     */
    TypeOrmModule.forRoot({
      type: 'postgres',
      url: process.env.DATABASE_URL,
      synchronize: true,
      autoLoadEntities: true,
      ssl: true,
      extra: {
        ssl: {
          rejectUnauthorized: false,
        },
      },
    }),

    /**
     * M√≥dulos propios de la app:
     * - PacientesModule: endpoints y l√≥gica de pacientes.
     * - TurnosModule: endpoints y l√≥gica de turnos.
     */
    PacientesModule,
    TurnosModule,
  ],
  // Este m√≥dulo ra√≠z no declara controladores ni providers propios.
  controllers: [],
  providers: [],
})
export class AppModule {}

// -----------------------------------------------------------------------------
// üìå Siguiente archivo recomendado para seguir:
// 1) "backend-gestor/src/pacientes/pacientes.module.ts"  ‚Üí c√≥mo se arma un m√≥dulo de dominio.
// 2) Luego "backend-gestor/src/turnos/turnos.module.ts"  ‚Üí patr√≥n similar aplicado a turnos.
// -----------------------------------------------------------------------------